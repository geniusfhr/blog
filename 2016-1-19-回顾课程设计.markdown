---
layout: post
title:  "回顾课程设计"
date:   2016-1-19
categories:  android floyd algorithms
author: 方浩然
header-img: "img/post-bg-unix.jpg"
---


`计量导航`--项目地址:    [http://github.com/geniusfhr](http://github.com/geniusfhr)    

## 回顾
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;做完算法课程设计才两天，关于细节是如何实现的就忘得差不多了。敲键盘之前，又得从头到尾梳理一遍自己的逻辑，恩，发现也还好嘛，思路还是很清晰，一步一步，直到完工。可能编程就是这么神奇的东西，前一天未完成的程序，第二天再看的时候，需要很长一段时间预热，才能进入状态，找到未完成的那个断点，接着开发。瞬间进入那个点，我暂时还做不到。。  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此次课程设计的要求是做一个简易的校园导航，定义十个点，求出任意两点之间的最短路径。算法很简单，`Floyd`最短路径算法，三层嵌套的循环，就可以得到关于路径和距离的两个二维数组。按要求输出即可。算法的代码如下。

````
   p = new int[10][10];                    //路径中转点p 二维数组
   int v,w;
   for( v = 0; v < 10; v++){               //路径初始化 当前无中转点 置为终点k
       for(w = 0; w < 10; w++){
           p[v][w] = w;
       }
   }

   //floyd最短路径算法
   //讨论所有两点之间的距离 是否需要k点作为中转点

   for(int k = 0; k < 10; k++){                         //当前中转点为k
       for(v = 0 ; v < 10; v++){                        //起点v
           for(w = 0; w < 10; w++){                     //终点w
               if(d[v][k] + d[k][w] < d[v][w]){         //如果经过中转点比不经过短
                   d[v][w] = d[v][k] + d[k][w];         //更新距离
                   p[v][w] = p[v][k];                   //更新路径 保存k 表示经过k点
               }
           }
       }
   }
````  

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;拿到题目最初的想法就是用android实现。本学习一直在断续地学习android开发，也算是入门了吧。所以抱着一遍写，一遍学的态度，开始了我的程序设计。基本地图方面我使用的是高德SDK，刚开始试过百度地图，问题很多，文档极其不完善，直接导致我不想使用。于是转向高德，因为在杭州，是有阿里情节吗？hhh，高德的开发者页面做的还是很漂亮的，好感度瞬间就上来了，也更有兴趣阅读它的开发教程。申请开发者Key，配置好AS开发环境，准备就绪。

## 关于项目
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;高德SDK的核心类，`MapView`和`AMap`，`MapView`作为地图的容器，在xml布局中引入即可。从容器中`getMap`就可以拿到AMap这个地图对象。接下来也一直是围绕它来编写的。高德API功能强大，显示拥堵情况，最短路径，步行导航这些常见的功能自然是包含在内。此次实验的目的就是自己实现路径规划这一功能。所以只使用它的基础地图包。给`Marker`设置点击事件，弹出`InfoWindow`。又添加了一个细节Activity，主要用来地点信息的显示，加上一幅配图。Android 6.0中的自带的工具栏也是相当漂亮。主界面下的三个Button，设为起点，终点，路径规划，分别为他们设置点击监听，定义起点标号和终点标号变量，点击即赋值。这里自己写了一个`numToMarker`方法，用来把编号转换为选定的marker，这样便于得到title等信息。关键的显示路径Button点击监听，涉及划线和路径距离`TextView`的显示。稍微有点复杂。定义了一个`CJLUMatrix`类来完成两个二维数组的存储，分别保存路径标号和长度，将起点编号和终点编号代入查询即可。查询到相关顶点之后，在两点之间划线，这样完成了数据模型和视图的连接。显示文字结果，拼接好字符串。最后完成引导页布局的编辑和其他细节的处理，包括一些回调方法的使用，接口的实现，以及UI部分的修改。


## 总结
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安卓的开发流程更加熟悉，也踩了不少坑，也算是一点经验吧。类似于在资源名称在中不要有大写字母。这学期自己用c实现了很多数据结构以及基础算法，感觉代码能力有明显的提高。假期计划读完`《Thinking in Java》`。

## 图片

![首页](http://i4.tietuku.com/56d6784d3ce2423c.png)
![Main](http://i4.tietuku.com/88b22ed8c4de1f1b.png)
![detail](http://i4.tietuku.com/4fb9fd35305a75fd.png)
